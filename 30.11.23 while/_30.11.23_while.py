#Найдите и исправьте ошибки в программе:

#Переведи программу на эстонский язык и добавьте в программу комментарии, для пояснения ошибок и того, как работают функции.

#Tõlgi suhtlemise laused eesti keele ja lisa kommentaare koodi seletamiseks.

print("*** ARVUDE MÄNGUD ***")
print()
#'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
while True: #while true
    try:
        a = abs(int(input("Kirjutage täisarv => "))) #()
        break
    except ValueError:
         print("See ei ole täisarv") #"
#'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
if a==0 :
    print("Nulliga pole mõtet midagi teha")
else:
#'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    print("kui palju arvus on paaris- ja paarituid numbreid")
    print()
    c=b=a #=
    paaris = 0 #=
    paaritu = 0#=
    while b > 0: #:
            if b % 2 == 0: #=
                    paaris+= 1 #+
            else:
                    paaritu+= 1#+
            b = b // 10
    
    print("Paariseid numbreid: ", paaris)#,
    print("Paaritu numbreid: ", paaritu)#,
    print()
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    print("*Pöörame* sisestatud numbri")
    print()
    b=0
    while a > 0: #:
        number = a % 10
        a = a // 10
        b = b * 10
        b+= number #+
    print(*"Pöörame* sisestatud numbri", b)
    print()
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    print("Kontrollime hüpoteesi Sirakuz") #()
    print()
    if c % 2 == 0: #=
        print("с - paaris numbet.Jagame 2.")
    else:
        print("с - paaritu number.Korrutame 3, liidame 1 ja jagame 2.")
    while c != 1:
            if c % 2 == 0: #=
               c = c // 2 #/ #=
            else:
                  c = (3*c + 1) / 2 #=
            print(c, end=" ") #"
    print()
    print("Hüpotees on õige") #"













from math import*
from random import *
#В бригаде, работающей на уборке сена, имеется N сенокосилок.

#Первая сенокосилка работала m часов, а каждая следующая на 10 минут больше, чем предыдущая.

#Сколько часов проработала вся бригада?

#N=randint(2,10)
#m=randint(1,10) 
#print("Masinad: ", N)
#print("Tunnid: ", m)
#summa=m
#for t in range(N-1):
#    m=(m/6)*7
#    summa+=m
#    print(m)
#print("Kokku masinad töötasid : ", summa, "tn")













#Составьте программу, которая печатает таблицу перевода расстояний из дюймов в сантиметры (1 дюйм =
#2,5 см) для значений длин от 1 до 20 дюймов.


#for x in range(1,21):
#    cm=x*2.5
#    print(f"{x} дюймов = {cm} сантиметр")












#  Вывести на экран числа, кратные К из промежутка [А,В].

#A = int(input("Введите начало промежутка A: "))
#B = int(input("Введите конец промежутка B: "))
#K = int(input("Введите число K: "))

#print(f"Числа, кратные {K} в промежутке от {A} до {B}:")

#for x in range(A, B + 1): #Это функция Python, которая создает последовательность чисел от A до B включительно. Обратите внимание, что B + 1 используется, чтобы включить значение B в последовательность.
#    if x % K == 0: #    x: Это текущее число из диапазона, которое рассматривается в цикле.
#    #%: Это оператор взятия остатка от деления. Если x % K равно 0, то это означает, что x делится на K без остатка.
##==: Это оператор сравнения, который проверяет, равны ли два значения. В данном случае, если num % K равно 0, то условие верно.
#        print(x)












#Напишите программу, печатающую столбик строк такого вида:
#x 0 0 0 0 0 0 0 0
#x x 0 0 0 0 0 0 0
#x 0 x 0 0 0 0 0 0
#x 0 0 x 0 0 0 0 0
#x 0 0 0 x 0 0 0 0
#x 0 0 0 0 x 0 0 0
#x 0 0 0 0 0 x 0 0
#x 0 0 0 0 0 0 x 0
#x 0 0 0 0 0 0 0 x

#for y in range(10):
#    for x in range(9):
#      if x==0 or y==x:
#        print("x", end=" ")
#      else:
#          print("0", end=" ")
#    print()

#print()







#Написать программу, выводящую в столбик десять строк, в каждой печатая цифры от 0 до 9, то есть в таком виде:
#0 1 2 3 4 5 6 7 8 9
#0 1 2 3 4 5 6 7 8 9
#...................
#0 1 2 3 4 5 6 7 8 9

#for y in range(10):
#    for x in range(10):
#     print(x, end=" ")
#    print()











# С клавиатуры вводятся N чисел.

#Составьте программу, которая определяет количество отрицательных,

# количество положительных и количество нулей среди введенных чисел.  

##Значение N вводится с клавиатуры.

#N = int(input("Введите количество чисел N: "))
#neg_summ=0
#pos_summa=0
#null=0
#for _ in range(N):
#     num=float(input("Введите число: "))
#     if num < 0:
#         neg_summ+=1
#     elif num==0:
#         null+=1
#     elif num>0:
#         pos_summa+=1
#print(f"количество отрицательных чисел: {neg_summ}, количество нулей: {null}, количество положительных чисел: {pos_summa}")







## Составьте программу, которая вычисляет сумму только отрицательных из N чисел. Значение N вводится с клавиатуры.
#try:
#    N = int(input("Введите количество чисел N: "))
#    negative_sum = 0

#    for _ in range(N):
#        num = float(input("Введите число: "))
#        if num < 0:
#            negative_sum += num

#    print(f"Сумма отрицательных чисел: {negative_sum}")

#except ValueError:
#    print("Ошибка ввода. Пожалуйста, введите целое число.")

##Этот код запрашивает у пользователя количество чисел N. Затем он использует цикл for, чтобы пройти через N чисел, запрашивая у пользователя ввод на каждой итерации. Если введенное число отрицательное, оно добавляется к переменной negative_sum. В конце выводится сумма отрицательных чисел. Обратите внимание, что код также обрабатывает ошибку ввода с помощью блока except ValueError.



## Составьте программу, выводящую на экран квадраты чисел от 10 до 20.
#for x in range(10, 21):
#    square = x ** 2
#    print(f"Квадрат числа {x}: {square}")










## Вводят 8 чисел. Найти их произведение (только положительных).
#t=1
#for x in range(8):
#        A = float(input(f"Введите число {x + 1}: "))
#        if A > 0:
#            t *= A
#print(t)

#print(f"Произведение положительных чисел: {t}")

#Использование t = 1 в начале программы обусловлено тем, что умножение на 1 не изменяет значение, и, следовательно, можно использовать 1 в качестве начального значения для переменной, которая будет содержать произведение чисел.

#Если бы мы установили t в 0, то весь последующий произведение также был бы 0. Если бы у нас было другое начальное значение, не являющееся единицей, то результат вычислений был бы неверным.

#Установив t в 1, мы можем быть уверены, что, начиная с ней, умножение на любое положительное число сохранит значение t как произведение всех этих чисел.

#Такой подход особенно полезен в задачах, где произведение будет вычисляться с использованием цикла, и мы хотим избежать искажений в итоговом результате.










# #Запросите у пользователя число А и найдите сумму всех натуральных чисел от 1 до А.
#summa=0
#A=int(input("Sisesta A: "))
#for x in range(1,A+1,1):
#     summa+=x 
#print("Summa : {0}". format(summa))

#    #summa=0: Инициализирует переменную summa значением 0 для хранения суммы чисел.
#    #A=int(input("Sisesta A: ")): Запрашивает ввод пользователя для значения A.
#    #for x in range(1,A+1,1):: Перебирает числа от 1 до A (включительно) с шагом 1, используя цикл for.
#    #summa+=x: Прибавляет каждое число x к переменной summa.
#    #print("Summa : {0}".format(summa)): Выводит итоговую сумму.



















##Вводят 15 чисел. Определить, сколько среди них целых.
#t=0
#for x in range(15):  #- это цикл в языке программирования Python, который выполняет указанный блок кода 15 раз. Давайте разберем, что означают его компоненты:

##    for x in range(15):: Это начало цикла. Здесь x - это переменная, которая будет использоваться для итерации по значениям в пределах заданного диапазона.

##    range(15): Это функция Python, создающая последовательность чисел от 0 до 14 (15 не включено). Таким образом, цикл будет выполняться 15 раз, начиная с 0 и заканчивая 14.

##Итак, каждая итерация цикла выполняет блок кода, который находится под этим циклом, и при этом переменная i принимает значения от 0 до 14. В приведенном вами коде цикл используется для того, чтобы пройти через 15 чисел, которые вводит пользователь (с помощью инструкции input).
#    A=float(input("Sisesta A: "))
#    if A.is_integer(): # это условная конструкция в языке программирования Python. Давайте разберем, что она означает:

##    A - это переменная, которая, вероятно, содержит введенное пользователем число.

##    A.is_integer() - это метод для чисел в Python, который возвращает True, если число является целым числом, и False, если оно нецелое. Метод is_integer() проверяет, является ли дробная часть числа нулевой.

##    if - это ключевое слово, с которого начинается условная конструкция. Если условие в скобках (num.is_integer()) истинно, то выполняется блок кода, который находится под условием.

##Таким образом, if A.is_integer(): используется для проверки, является ли введенное число целым. Если это так, то код внутри блока после этого условия будет выполнен. В контексте предоставленного ранее кода, это используется для подсчета целых чисел среди введенных пользователем чисел.
#        t+=1 #- это сокращенная форма записи для увеличения значения переменной count_integers на 1. Давайте разберем, что это означает:

##    count_integers - это переменная, которая, вероятно, используется для отслеживания количества целых чисел среди введенных данных.

##    += - это оператор увеличения значения переменной на заданное число. В данном случае, на 1.

##    1 - это число, на которое увеличивается значение переменной count_integers.

##Таким образом, выражение count_integers += 1 означает "увеличь значение переменной count_integers на 1". В контексте предоставленного ранее кода, это используется для подсчета количества целых чисел среди введенных пользователем чисел: каждый раз, когда встречается целое число, значение count_integers увеличивается на 1.

#print(t)






 #for x in range(10):
#    R=float(input("(0). R: ".format(x+1)))
#    if R>0:
#        S=pi*R**2
#    else:
#        S="R peab > kui 0 olema"
#    print("S={0}". format(S))
#10 R
#x=0
#while x<10:
#    x+=1
#    R=float(input("(0). R: ".format(x+1)))
#    if R>0:
#        S=pi*R**2
#    else:
#        S="R peab > kui 0 olema"
#    print("S={0}". format(S))
#    if x==10:
#        break
#10 S
#x=0
#while x<10:
#    x+=1
#    R=float(input("(0). R: ".format(x+1)))
#    if R>0:
#        S=pi*R**2
#        x+=1
#    else:
#        S="R peab > kui 0 olema"
#    print("S={0}". format(S))
#    if x==10:
#        break
